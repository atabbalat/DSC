demo()
library(ggplot2)
library(pastecs)
options(scipen = 999)
df <- read.csv("data_3B.csv")
# What are the elements in your data (including the categories and data types)?
str(df)
summary(df)
# Please provide the output from the following functions: str(); nrow(); ncol()
str(df)
nrow(df)
ncol(df)
# Create a Histogram of the HSDegree variable using the ggplot2 package.
# Set a bin size for the Histogram.
# Include a Title and appropriate X/Y axis labels on your Histogram Plot.
ggplot(data = df, aes (x = HSDegree)) + geom_histogram(bins = 50, color = "black", fill = "Navy", alpha = 0.7) +
ggtitle("Histogram of Total Poulation with a highschool degree") +
xlab ("% of Population for highschool degree") +
ylab ("Count")
# Answer the following questions based on the Histogram produced:
# Based on what you see in this histogram, is the data distribution unimodal? -> Yes, histogram is unimodal since there is only one peak.
# Is it approximately symmetrical? -> No, it looks more negatively skewed.
# Is it approximately bell-shaped? -> No, bell shaped would be more symmetrical.
# Is it approximately normal? -> No, normal distribution would be more bell shaped rather than skewed.
# If not normal, is the distribution skewed? If so, in which direction? -> it is negatively skewed
# Include a normal curve to the Histogram that you plotted.
ggplot(data = df, aes (x = HSDegree)) + geom_histogram(bins = 50, color = "black", fill = "Navy", alpha = 0.7) +
ggtitle("Histogram of Total Poulation with a highschool degree") +
xlab ("% of Population for highschool degree") +
ylab ("Count") +
geom_density(aes(x = HSDegree), fill = "green")
ggplot(data = df, aes (x = HSDegree)) + geom_histogram(bins = 50, color = "black", fill = "Navy", alpha = 0.7) +
ggtitle("Histogram of Total Poulation with a highschool degree") +
xlab ("% of Population for highschool degree") +
ylab ("Count")
# Answer the following questions based on the Histogram produced:
# Based on what you see in this histogram, is the data distribution unimodal? -> Yes, histogram is unimodal since there is only one peak.
# Is it approximately symmetrical? -> No, it looks more negatively skewed.
# Is it approximately bell-shaped? -> No, bell shaped would be more symmetrical.
# Is it approximately normal? -> No, normal distribution would be more bell shaped rather than skewed.
# If not normal, is the distribution skewed? If so, in which direction? -> it is negatively skewed
# Include a normal curve to the Histogram that you plotted.
ggplot(data = df, aes (x = HSDegree)) + geom_histogram(bins = 50, color = "black", fill = "Navy", alpha = 0.7) +
ggtitle("Histogram of Total Poulation with a highschool degree") +
xlab ("% of Population for highschool degree") +
ylab ("Count") +
geom_density(aes(x = HSDegree), fill = "green")
df <- read.csv("data_3B.csv")
library(ggplot2)
library(pastecs)
library(psych)
library(ggplot2)
library(pastecs)
library(psych)
options(scipen = 999)
df <- read.csv("data_3B.csv")
# What are the elements in your data (including the categories and data types)?
str(df)
summary(df)
# Please provide the output from the following functions: str(); nrow(); ncol()
str(df)
nrow(df)
ncol(df)
# Create a Histogram of the HSDegree variable using the ggplot2 package.
# Set a bin size for the Histogram.
# Include a Title and appropriate X/Y axis labels on your Histogram Plot.
ggplot(data = df, aes (x = HSDegree)) + geom_histogram(bins = 50, color = "black", fill = "Navy", alpha = 0.7) +
ggtitle("Histogram of Total Poulation with a highschool degree") +
xlab ("% of Population for highschool degree") +
ylab ("Count")
# Answer the following questions based on the Histogram produced:
# Based on what you see in this histogram, is the data distribution unimodal? -> Yes, histogram is unimodal since there is only one peak.
# Is it approximately symmetrical? -> No, it looks more negatively skewed.
# Is it approximately bell-shaped? -> No, bell shaped would be more symmetrical.
# Is it approximately normal? -> No, normal distribution would be more bell shaped rather than skewed.
# If not normal, is the distribution skewed? If so, in which direction? -> it is negatively skewed
# Include a normal curve to the Histogram that you plotted.
ggplot(data = df, aes (x = HSDegree)) + geom_histogram(bins = 50, color = "black", fill = "Navy", alpha = 0.7) +
ggtitle("Histogram of Total Poulation with a highschool degree") +
xlab ("% of Population for highschool degree") +
ylab ("Count") +
geom_density(aes(x = HSDegree), fill = "green")
ggplot(data = df, aes(x = HSDegree)) + geom_histogram(aes(y = ..density..), bins = 50, colour = "black", fill = "Navy", alpha = 0.7) +
stat_function(fun = dnorm, args = list(mean = mean(df$HSDegree), sd = sd(df$HSDegree)), color = "red") +
ggtitle("Histogram of Total Poulation with a highschool degree") +
xlab ("% of Population for highschool degree") +
ylab ("Count")
# Explain whether a normal distribution can accurately be used as a model for this data. -> This a clear negative skewed distribution, so a normal wouldnt work.
# Create a Probability Plot of the HSDegree variable.
ggplot(data = df, aes(x = HSDegree)) + geom_density(fill = "Navy") +
ggtitle("Probability Distribution of Total Poulation with a highschool degree") +
xlab ("% of Population for highschool degree") +
ylab ("Density")
# Answer the following questions based on the Probability Plot:
# Based on what you see in this probability plot, is the distribution approximately normal? Explain how you know. -> No, this is not a normal distribution since the graph is not symmetrical, the first half is less steep than the second half.
# If not normal, is the distribution skewed? If so, in which direction? Explain how you know. -> This is negatively skewed since the beginning half is less steep than the last half of the graph.
# Now that you have looked at this data visually for normality, you will now quantify normality with numbers using the stat.desc() function. Include a screen capture of the results produced.
stats <- stat.desc(df$HSDegree, basic = FALSE, norm = TRUE)
stats
# In several sentences provide an explanation of the result produced for skew, kurtosis, and z-scores. In addition, explain how a change in the sample size may change your explanation?
load("C:/Users/abedt/OneDrive/Desktop/PyCharm Projects/DSC 520/Week 2/.RData")
# Assingment 3.2 Part 2
# Name: Tabbalat, Abed
# Class: DSC520
# Date: 04-01-2021
library(ggplot2)
library(pastecs)
library(psych)
options(scipen = 999)
df <- read.csv("data_3B.csv")
# What are the elements in your data (including the categories and data types)?
str(df)
summary(df)
# Please provide the output from the following functions: str(); nrow(); ncol()
str(df)
nrow(df)
ncol(df)
# Create a Histogram of the HSDegree variable using the ggplot2 package.
# Set a bin size for the Histogram.
# Include a Title and appropriate X/Y axis labels on your Histogram Plot.
ggplot(data = df, aes (x = HSDegree)) + geom_histogram(bins = 50, color = "black", fill = "Navy", alpha = 0.7) +
ggtitle("Histogram of Total Poulation with a highschool degree") +
xlab ("% of Population for highschool degree") +
ylab ("Count")
# Answer the following questions based on the Histogram produced:
# Based on what you see in this histogram, is the data distribution unimodal? -> Yes, histogram is unimodal since there is only one peak.
# Is it approximately symmetrical? -> No, it looks more negatively skewed.
# Is it approximately bell-shaped? -> No, bell shaped would be more symmetrical.
# Is it approximately normal? -> No, normal distribution would be more bell shaped rather than skewed.
# If not normal, is the distribution skewed? If so, in which direction? -> it is negatively skewed
# Include a normal curve to the Histogram that you plotted.
ggplot(data = df, aes (x = HSDegree)) + geom_histogram(bins = 50, color = "black", fill = "Navy", alpha = 0.7) +
ggtitle("Histogram of Total Poulation with a highschool degree") +
xlab ("% of Population for highschool degree") +
ylab ("Count") +
geom_density(aes(x = HSDegree), fill = "green")
ggplot(data = df, aes(x = HSDegree)) + geom_histogram(aes(y = ..density..), bins = 50, colour = "black", fill = "Navy", alpha = 0.7) +
stat_function(fun = dnorm, args = list(mean = mean(df$HSDegree), sd = sd(df$HSDegree)), color = "red") +
ggtitle("Histogram of Total Poulation with a highschool degree") +
xlab ("% of Population for highschool degree") +
ylab ("Count")
# Explain whether a normal distribution can accurately be used as a model for this data. -> This a clear negative skewed distribution, so a normal wouldnt work.
# Create a Probability Plot of the HSDegree variable.
ggplot(data = df, aes(x = HSDegree)) + geom_density(fill = "Navy") +
ggtitle("Probability Distribution of Total Poulation with a highschool degree") +
xlab ("% of Population for highschool degree") +
ylab ("Density")
# Answer the following questions based on the Probability Plot:
# Based on what you see in this probability plot, is the distribution approximately normal? Explain how you know. -> No, this is not a normal distribution since the graph is not symmetrical, the first half is less steep than the second half.
# If not normal, is the distribution skewed? If so, in which direction? Explain how you know. -> This is negatively skewed since the beginning half is less steep than the last half of the graph.
# Now that you have looked at this data visually for normality, you will now quantify normality with numbers using the stat.desc() function. Include a screen capture of the results produced.
stats <- stat.desc(df$HSDegree, basic = FALSE, norm = TRUE)
stats
# In several sentences provide an explanation of the result produced for skew, kurtosis, and z-scores. In addition, explain how a change in the sample size may change your explanation?
library(ggplot2)
library(pastecs)
library(psych)
options(scipen = 999)
df <- read.csv("data_3B.csv")
test = 1 + 1
test
library(ggplot2)
library(dplyr)
library(tidyr)
library(rgdal)
library(usmap)
library(maptools)
setwd('C:/Users/abedt/OneDrive/Desktop/Desktop_V2/PyCharm Projects/DSC_640/Week 9 & 10')
# Loading data
df_costco <- read.csv('costcos-geocoded.csv')
df_ppg <- read.csv('ppg2008.csv')
# Heat Map
df_ppg_10 <- df_ppg[c(1:10), c(1:11)]
df_ppg_10 <- data.frame(df_ppg_10)
df_ppg_10[c(2:11)] <- scale(df_ppg_10[c(2:11)])
df_ppg_longer <- df_ppg_10 %>% pivot_longer(!Name,
names_to = 'Type',
values_to = 'Stat')
heat <- ggplot(df_ppg_longer, aes(x=factor(Type, level=c('G', 'MIN', 'PTS',
'FGM', 'FGA', 'FGP',
'FTM', 'FTA', 'FTP',
'X3PM')),
y=Name, fill=Stat)) +
geom_tile(show.legend = FALSE) +
geom_text(aes(label = round(Stat, digits = 2)), color = 'white', size = 3) +
coord_fixed() +
scale_fill_gradient(low = "black", high = "red") +
ggtitle("R - Heat Map\nNBA Performance") +
xlab('Stat')
heat
# Spatial Chart
shape <- readOGR('shape/States_shapefile.shp', stringsAsFactors = FALSE)
latLong <- data.frame(lon=df_costco$Longitude, lat=df_costco$Latitude)
transformData <- usmap_transform(latLong)
spatial <- plot_usmap(regions = "states") +
labs(title = "R - Spatial Chart", subtitle = "Costco Locations") +
theme(panel.background=element_blank()) +
geom_point(data = transformData, aes(x = x, y = y), color = 'red', alpha = 0.5)
spatial
# Contour Chart
X <- sort(df_ppg$MIN, decreasing = FALSE)
Y <- sort(df_ppg$PTS, decreasing = FALSE)
Z <- sqrt(outer(X ^ 2, Y ^ 2, '+'))
df_contour <- data.frame(x=rep(X, each=length(Y)), y=rep(Y, length(X)), z=c(Z))
# Plot the contour chart
contourChart <- filled.contour(Z, plot.title = title(main = "R - Contour\nNBA Performance",
xlab = 'Minutes (%)',  ylab = 'Points(%)', cex.main = 0.8))
contourChart
